"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tensorflow-models";
exports.ids = ["vendor-chunks/@tensorflow-models"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tensorflow-models/toxicity/dist/toxicity.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow-models/toxicity/dist/toxicity.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToxicityClassifier: () => (/* binding */ ToxicityClassifier),\n/* harmony export */   load: () => (/* binding */ load$1),\n/* harmony export */   version: () => (/* binding */ version$1)\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-converter */ \"(ssr)/./node_modules/@tensorflow/tfjs-converter/dist/tf-converter.esm.js\");\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"(ssr)/./node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js\");\n/**\n    * @license\n    * Copyright 2019 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */ \n\nfunction __awaiter(t, e, r, n) {\n    return new (r || (r = Promise))(function(o, i) {\n        function a(t) {\n            try {\n                s(n.next(t));\n            } catch (t) {\n                i(t);\n            }\n        }\n        function l(t) {\n            try {\n                s(n.throw(t));\n            } catch (t) {\n                i(t);\n            }\n        }\n        function s(t) {\n            t.done ? o(t.value) : new r(function(e) {\n                e(t.value);\n            }).then(a, l);\n        }\n        s((n = n.apply(t, e || [])).next());\n    });\n}\nfunction __generator(t, e) {\n    var r, n, o, i, a = {\n        label: 0,\n        sent: function() {\n            if (1 & o[0]) throw o[1];\n            return o[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return i = {\n        next: l(0),\n        throw: l(1),\n        return: l(2)\n    }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function() {\n        return this;\n    }), i;\n    function l(i) {\n        return function(l) {\n            return function(i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for(; a;)try {\n                    if (r = 1, n && (o = 2 & i[0] ? n.return : i[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, i[1])).done) return o;\n                    switch(n = 0, o && (i = [\n                        2 & i[0],\n                        o.value\n                    ]), i[0]){\n                        case 0:\n                        case 1:\n                            o = i;\n                            break;\n                        case 4:\n                            return a.label++, {\n                                value: i[1],\n                                done: !1\n                            };\n                        case 5:\n                            a.label++, n = i[1], i = [\n                                0\n                            ];\n                            continue;\n                        case 7:\n                            i = a.ops.pop(), a.trys.pop();\n                            continue;\n                        default:\n                            if (!(o = (o = a.trys).length > 0 && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {\n                                a = 0;\n                                continue;\n                            }\n                            if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\n                                a.label = i[1];\n                                break;\n                            }\n                            if (6 === i[0] && a.label < o[1]) {\n                                a.label = o[1], o = i;\n                                break;\n                            }\n                            if (o && a.label < o[2]) {\n                                a.label = o[2], a.ops.push(i);\n                                break;\n                            }\n                            o[2] && a.ops.pop(), a.trys.pop();\n                            continue;\n                    }\n                    i = e.call(t, a);\n                } catch (t) {\n                    i = [\n                        6,\n                        t\n                    ], n = 0;\n                } finally{\n                    r = o = 0;\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                    value: i[0] ? i[1] : void 0,\n                    done: !0\n                };\n            }([\n                i,\n                l\n            ]);\n        };\n    }\n}\nfunction __awaiter$1(t, e, r, n) {\n    return new (r || (r = Promise))(function(o, i) {\n        function a(t) {\n            try {\n                s(n.next(t));\n            } catch (t) {\n                i(t);\n            }\n        }\n        function l(t) {\n            try {\n                s(n.throw(t));\n            } catch (t) {\n                i(t);\n            }\n        }\n        function s(t) {\n            t.done ? o(t.value) : new r(function(e) {\n                e(t.value);\n            }).then(a, l);\n        }\n        s((n = n.apply(t, e || [])).next());\n    });\n}\nfunction __generator$1(t, e) {\n    var r, n, o, i, a = {\n        label: 0,\n        sent: function() {\n            if (1 & o[0]) throw o[1];\n            return o[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return i = {\n        next: l(0),\n        throw: l(1),\n        return: l(2)\n    }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function() {\n        return this;\n    }), i;\n    function l(i) {\n        return function(l) {\n            return function(i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for(; a;)try {\n                    if (r = 1, n && (o = 2 & i[0] ? n.return : i[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, i[1])).done) return o;\n                    switch(n = 0, o && (i = [\n                        2 & i[0],\n                        o.value\n                    ]), i[0]){\n                        case 0:\n                        case 1:\n                            o = i;\n                            break;\n                        case 4:\n                            return a.label++, {\n                                value: i[1],\n                                done: !1\n                            };\n                        case 5:\n                            a.label++, n = i[1], i = [\n                                0\n                            ];\n                            continue;\n                        case 7:\n                            i = a.ops.pop(), a.trys.pop();\n                            continue;\n                        default:\n                            if (!(o = (o = a.trys).length > 0 && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {\n                                a = 0;\n                                continue;\n                            }\n                            if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\n                                a.label = i[1];\n                                break;\n                            }\n                            if (6 === i[0] && a.label < o[1]) {\n                                a.label = o[1], o = i;\n                                break;\n                            }\n                            if (o && a.label < o[2]) {\n                                a.label = o[2], a.ops.push(i);\n                                break;\n                            }\n                            o[2] && a.ops.pop(), a.trys.pop();\n                            continue;\n                    }\n                    i = e.call(t, a);\n                } catch (t) {\n                    i = [\n                        6,\n                        t\n                    ], n = 0;\n                } finally{\n                    r = o = 0;\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                    value: i[0] ? i[1] : void 0,\n                    done: !0\n                };\n            }([\n                i,\n                l\n            ]);\n        };\n    }\n}\nvar stringToChars = function(t) {\n    for(var e = [], r = 0, n = t; r < n.length; r++){\n        var o = n[r];\n        e.push(o);\n    }\n    return e;\n}, TrieNode = function() {\n    this.parent = null, this.children = {}, this.end = !1, this.word = [\n        [],\n        0,\n        0\n    ];\n}, Trie = function() {\n    function t() {\n        this.root = new TrieNode;\n    }\n    return t.prototype.insert = function(t, e, r) {\n        for(var n = this.root, o = stringToChars(t), i = 0; i < o.length; i++)n.children[o[i]] || (n.children[o[i]] = new TrieNode, n.children[o[i]].parent = n, n.children[o[i]].word[0] = n.word[0].concat(o[i])), n = n.children[o[i]], i === o.length - 1 && (n.end = !0, n.word[1] = e, n.word[2] = r);\n    }, t.prototype.commonPrefixSearch = function(t) {\n        for(var e = [], r = this.root.children[t[0]], n = 0; n < t.length && r; n++)r.end && e.push(r.word), r = r.children[t[n + 1]];\n        return e.length || e.push([\n            [\n                t[0]\n            ],\n            0,\n            0\n        ]), e;\n    }, t;\n}(), separator = \"▁\";\nfunction processInput(t) {\n    var e = t.normalize(\"NFKC\");\n    return separator + e.replace(/ /g, separator);\n}\nvar RESERVED_SYMBOLS_COUNT = 6, Tokenizer = function() {\n    function t(t) {\n        this.vocabulary = t, this.trie = new Trie;\n        for(var e = RESERVED_SYMBOLS_COUNT; e < this.vocabulary.length; e++)this.trie.insert(this.vocabulary[e][0], this.vocabulary[e][1], e);\n    }\n    return t.prototype.encode = function(t) {\n        var e = [], r = [], n = [];\n        t = processInput(t);\n        for(var o = stringToChars(t), i = 0; i <= o.length; i++)e.push({}), r.push(0), n.push(0);\n        for(i = 0; i < o.length; i++)for(var a = this.trie.commonPrefixSearch(o.slice(i)), l = 0; l < a.length; l++){\n            var s = a[l], u = {\n                key: s[0],\n                score: s[1],\n                index: s[2]\n            };\n            null == e[i + (c = s[0].length)][i] && (e[i + c][i] = []), e[i + c][i].push(u);\n        }\n        for(var c = 0; c <= o.length; c++)for(var h in e[c]){\n            var f = e[c][h];\n            for(l = 0; l < f.length; l++){\n                var d = f[l], p = d.score + n[c - d.key.length];\n                (0 === n[c] || p >= n[c]) && (n[c] = p, r[c] = f[l].index);\n            }\n        }\n        for(var v = [], y = r.length - 1; y > 0;)v.push(r[y]), y -= this.vocabulary[r[y]][0].length;\n        var b = [], w = !1;\n        for(i = 0; i < v.length; i++){\n            var g = v[i];\n            w && 0 === g || b.push(g), w = 0 === g;\n        }\n        return b.reverse();\n    }, t;\n}(), BASE_PATH = \"https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/\";\nfunction loadTokenizer(t) {\n    return __awaiter$1(this, void 0, void 0, function() {\n        var e;\n        return __generator$1(this, function(r) {\n            switch(r.label){\n                case 0:\n                    return [\n                        4,\n                        loadVocabulary(t)\n                    ];\n                case 1:\n                    return e = r.sent(), [\n                        2,\n                        new Tokenizer(e)\n                    ];\n            }\n        });\n    });\n}\nfunction loadVocabulary(t) {\n    return void 0 === t && (t = BASE_PATH + \"vocab.json\"), __awaiter$1(this, void 0, void 0, function() {\n        return __generator$1(this, function(e) {\n            switch(e.label){\n                case 0:\n                    return [\n                        4,\n                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.fetch(t)\n                    ];\n                case 1:\n                    return [\n                        2,\n                        e.sent().json()\n                    ];\n            }\n        });\n    });\n}\nvar version$1 = \"1.2.2\";\nfunction load$1(t, e) {\n    return __awaiter(this, void 0, void 0, function() {\n        var r;\n        return __generator(this, function(n) {\n            switch(n.label){\n                case 0:\n                    return [\n                        4,\n                        (r = new ToxicityClassifier(t, e)).load()\n                    ];\n                case 1:\n                    return n.sent(), [\n                        2,\n                        r\n                    ];\n            }\n        });\n    });\n}\nvar ToxicityClassifier = function() {\n    function t(t, e) {\n        void 0 === t && (t = .85), void 0 === e && (e = []), this.threshold = t, this.toxicityLabels = e;\n    }\n    return t.prototype.loadModel = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(t) {\n                return [\n                    2,\n                    (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_0__.loadGraphModel)(\"https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1\", {\n                        fromTFHub: !0\n                    })\n                ];\n            });\n        });\n    }, t.prototype.loadTokenizer = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(t) {\n                return [\n                    2,\n                    loadTokenizer()\n                ];\n            });\n        });\n    }, t.prototype.load = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            var t, e, r, n = this;\n            return __generator(this, function(o) {\n                switch(o.label){\n                    case 0:\n                        return [\n                            4,\n                            Promise.all([\n                                this.loadModel(),\n                                this.loadTokenizer()\n                            ])\n                        ];\n                    case 1:\n                        return t = o.sent(), e = t[0], r = t[1], this.model = e, this.tokenizer = r, this.labels = e.outputs.map(function(t) {\n                            return t.name.split(\"/\")[0];\n                        }), 0 === this.toxicityLabels.length ? this.toxicityLabels = this.labels : _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.assert(this.toxicityLabels.every(function(t) {\n                            return n.labels.indexOf(t) > -1;\n                        }), function() {\n                            return \"toxicityLabels argument must contain only items from the model heads \" + n.labels.join(\", \") + \", got \" + n.toxicityLabels.join(\", \");\n                        }), [\n                            2\n                        ];\n                }\n            });\n        });\n    }, t.prototype.classify = function(t) {\n        return __awaiter(this, void 0, void 0, function() {\n            var e, r, n, o, i, a, l, s = this;\n            return __generator(this, function(u) {\n                switch(u.label){\n                    case 0:\n                        for(\"string\" == typeof t && (t = [\n                            t\n                        ]), e = t.map(function(t) {\n                            return s.tokenizer.encode(t);\n                        }), r = e.map(function(t, e) {\n                            return t.map(function(t, r) {\n                                return [\n                                    e,\n                                    r\n                                ];\n                            });\n                        }), n = [], o = 0; o < r.length; o++)n = n.concat(r[o]);\n                        return i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.tensor2d)(n, [\n                            n.length,\n                            2\n                        ], \"int32\"), a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.tensor1d)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.flatten(e), \"int32\"), [\n                            4,\n                            this.model.executeAsync({\n                                Placeholder_1: i,\n                                Placeholder: a\n                            })\n                        ];\n                    case 1:\n                        return l = u.sent(), i.dispose(), a.dispose(), [\n                            2,\n                            l.map(function(t, e) {\n                                return {\n                                    data: t,\n                                    headIndex: e\n                                };\n                            }).filter(function(t) {\n                                return s.toxicityLabels.indexOf(s.labels[t.headIndex]) > -1;\n                            }).map(function(e) {\n                                for(var r = e.data.dataSync(), n = [], o = 0; o < t.length; o++){\n                                    var i = r.slice(2 * o, 2 * o + 2), a = null;\n                                    Math.max(i[0], i[1]) > s.threshold && (a = i[0] < i[1]), n.push({\n                                        probabilities: i,\n                                        match: a\n                                    });\n                                }\n                                return {\n                                    label: s.labels[e.headIndex],\n                                    results: n\n                                };\n                            })\n                        ];\n                }\n            });\n        });\n    }, t;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tensorflow-models/toxicity/dist/toxicity.esm.js\n");

/***/ })

};
;